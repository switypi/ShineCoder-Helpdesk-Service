// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShineCoder_Helpdesk.Infrastructure;

#nullable disable

namespace ShineCoder_Helpdesk.Infrastructure.Migrations
{
    [DbContext(typeof(HelpdeskDbContext))]
    partial class HelpdeskDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Dbo")
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", "Identity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "VIEWACCESS",
                            ClaimValue = "True",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "ADDACCESS",
                            ClaimValue = "True",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 3,
                            ClaimType = "EDITACCESS",
                            ClaimValue = "True",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 4,
                            ClaimType = "DELETEACCESS",
                            ClaimValue = "True",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", "Identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", "Identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", "Identity");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", "Identity");
                });

            modelBuilder.Entity("ShineCoder_Helpdesk.Infrastructure.Models.ApplicationRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAgent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsClient")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", "Identity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            IsAgent = false,
                            IsClient = false,
                            Name = "ADMIN",
                            NormalizedName = "Admin",
                            RoleName = "Admin"
                        });
                });

            modelBuilder.Entity("ShineCoder_Helpdesk.Infrastructure.Models.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("ImageBytes")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("JobTitle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("User", "Identity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            Active = true,
                            ConcurrencyStamp = "58ebd704-9d4d-4ec2-a5d6-a48c6995b9c7",
                            Email = "admin@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Admin",
                            LastName = "Admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "admin@gmail.com",
                            NormalizedUserName = "admin",
                            PasswordHash = "AQAAAAIAAYagAAAAEClVg+0r8vJ/sQk7GjbL18J5ZphdpZf/LeYI75a4jIeGXq/iO20Bco83qBkRFLXG/A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6bdef764-7956-465c-94e8-426f85316d6d",
                            TwoFactorEnabled = false,
                            UserName = "admin",
                            UserType = 0
                        });
                });

            modelBuilder.Entity("ShineCoder_Helpdesk.Infrastructure.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Categories", "Dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Description = "Network",
                            IsDefault = true,
                            Name = "Network"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Description = "Printer",
                            IsDefault = false,
                            Name = "Printer"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Description = "Software program",
                            IsDefault = false,
                            Name = "Software"
                        });
                });

            modelBuilder.Entity("ShineCoder_Helpdesk.Infrastructure.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Departments", "Dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Description = "Technology ",
                            IsDefault = true,
                            Name = "Technology"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Description = "Hardware",
                            IsDefault = true,
                            Name = "Hardware"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Description = "Software",
                            IsDefault = true,
                            Name = "Software"
                        });
                });

            modelBuilder.Entity("ShineCoder_Helpdesk.Infrastructure.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Locations", "Dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Description = "Koramangala",
                            IsDefault = true,
                            Name = "Koramangala"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Description = "Bansawadi",
                            IsDefault = true,
                            Name = "Bansawadi"
                        });
                });

            modelBuilder.Entity("ShineCoder_Helpdesk.Infrastructure.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Products", "Dbo");
                });

            modelBuilder.Entity("ShineCoder_Helpdesk.Infrastructure.Models.RequestType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("RequestTypes", "Dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Description = "Service requests",
                            IsDefault = true,
                            Name = "Service request"
                        });
                });

            modelBuilder.Entity("ShineCoder_Helpdesk.Infrastructure.Models.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories", "Dbo");
                });

            modelBuilder.Entity("ShineCoder_Helpdesk.Infrastructure.Models.Ticket_Attachments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ImageBytes")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TicketId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.ToTable("Ticket_Attachments", "Dbo");
                });

            modelBuilder.Entity("ShineCoder_Helpdesk.Infrastructure.Models.Ticket_Impact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Ticket_Impacts", "Dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 2, 28, 18, 48, 36, 541, DateTimeKind.Local).AddTicks(3212),
                            Description = "Low impact ticket",
                            Name = "Low",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 2, 28, 18, 48, 36, 541, DateTimeKind.Local).AddTicks(3214),
                            Description = "High impact ticket",
                            Name = "High",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 2, 28, 18, 48, 36, 541, DateTimeKind.Local).AddTicks(3216),
                            Description = "Normal impact ticket",
                            Name = "Normal",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("ShineCoder_Helpdesk.Infrastructure.Models.Ticket_Level", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Ticket_Levels", "Dbo");
                });

            modelBuilder.Entity("ShineCoder_Helpdesk.Infrastructure.Models.Ticket_Mode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Ticket_Modes", "Dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Description = "Website",
                            IsDefault = true,
                            Name = "WebSite"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Description = "Email",
                            IsDefault = true,
                            Name = "Email"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Description = "Phone",
                            IsDefault = true,
                            Name = "Phone"
                        });
                });

            modelBuilder.Entity("ShineCoder_Helpdesk.Infrastructure.Models.Ticket_Priorities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Ticket_Priorities", "Dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 2, 28, 18, 48, 36, 541, DateTimeKind.Local).AddTicks(3096),
                            Description = "Low priority ticket",
                            Name = "Low",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 2, 28, 18, 48, 36, 541, DateTimeKind.Local).AddTicks(3099),
                            Description = "High priority ticket",
                            Name = "High",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 2, 28, 18, 48, 36, 541, DateTimeKind.Local).AddTicks(3101),
                            Description = "Medium priority ticket",
                            Name = "Medium",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 2, 28, 18, 48, 36, 541, DateTimeKind.Local).AddTicks(3103),
                            Description = "Normal priority ticket",
                            Name = "Normal",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("ShineCoder_Helpdesk.Infrastructure.Models.Ticket_Solutions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("ticketsId")
                        .HasColumnType("int");

                    b.Property<string>("tkt_solution_desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ticketsId");

                    b.ToTable("Ticket_Solutions", "Dbo");
                });

            modelBuilder.Entity("ShineCoder_Helpdesk.Infrastructure.Models.Ticket_Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Ticket_Status", "Dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 2, 28, 18, 48, 36, 541, DateTimeKind.Local).AddTicks(2903),
                            Description = "New ticket",
                            Name = "New",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 2, 28, 18, 48, 36, 541, DateTimeKind.Local).AddTicks(2916),
                            Description = "Open ticket",
                            Name = "Open",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 2, 28, 18, 48, 36, 541, DateTimeKind.Local).AddTicks(2918),
                            Description = "Closed ticket",
                            Name = "Closed",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 2, 28, 18, 48, 36, 541, DateTimeKind.Local).AddTicks(2920),
                            Description = "Resolved ticket",
                            Name = "Resolved",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("ShineCoder_Helpdesk.Infrastructure.Models.Ticket_Urgency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Ticket_Urgencies", "Dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 2, 28, 18, 48, 36, 541, DateTimeKind.Local).AddTicks(3127),
                            Description = "Low Urgency",
                            Name = "Low",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 2, 28, 18, 48, 36, 541, DateTimeKind.Local).AddTicks(3129),
                            Description = "High urgency",
                            Name = "High",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 2, 28, 18, 48, 36, 541, DateTimeKind.Local).AddTicks(3131),
                            Description = "Normal urgency",
                            Name = "Normal",
                            UpdatedBy = ""
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreatedBy = "admin",
                            CreatedDate = new DateTime(2024, 2, 28, 18, 48, 36, 541, DateTimeKind.Local).AddTicks(3133),
                            Description = "Urgent",
                            Name = "Urgent",
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("ShineCoder_Helpdesk.Infrastructure.Models.Tickets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusUpdateReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TicketLevelId")
                        .HasColumnType("int");

                    b.Property<int?>("TicketPriorityId")
                        .HasColumnType("int");

                    b.Property<int?>("TicketStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Ticket_Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Ticket_ModeId")
                        .HasColumnType("int");

                    b.Property<string>("Ticket_Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Tkt_AssignedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("Tkt_CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("Tkt_DepartmentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Tkt_DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Tkt_ImpactId")
                        .HasColumnType("int");

                    b.Property<int?>("Tkt_LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Tkt_Number")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("('SC-'+right(replicate('0',(5))+CONVERT([varchar],[Id]),(5)))");

                    b.Property<int?>("Tkt_RequestTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("Tkt_RequestUserId")
                        .HasColumnType("int");

                    b.Property<int?>("Tkt_SubCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("Tkt_UpdateReasonId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("TicketLevelId");

                    b.HasIndex("TicketPriorityId");

                    b.HasIndex("TicketStatusId");

                    b.HasIndex("Ticket_ModeId");

                    b.HasIndex("Tkt_AssignedUserId");

                    b.HasIndex("Tkt_CategoryId");

                    b.HasIndex("Tkt_DepartmentId");

                    b.HasIndex("Tkt_ImpactId");

                    b.HasIndex("Tkt_LocationId");

                    b.HasIndex("Tkt_RequestTypeId");

                    b.HasIndex("Tkt_RequestUserId");

                    b.HasIndex("Tkt_SubCategoryId");

                    b.HasIndex("Tkt_UpdateReasonId");

                    b.ToTable("Tickets", "Dbo");
                });

            modelBuilder.Entity("ShineCoder_Helpdesk.Infrastructure.Models.Tkt_UpdateReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Tkt_UpdateReasons", "Dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Description = "Success",
                            IsDefault = true,
                            Name = "Success"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Description = "Failed",
                            IsDefault = false,
                            Name = "Failed to complete"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Description = "No Need",
                            IsDefault = false,
                            Name = "Not-Needed"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("ShineCoder_Helpdesk.Infrastructure.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("ShineCoder_Helpdesk.Infrastructure.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("ShineCoder_Helpdesk.Infrastructure.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("ShineCoder_Helpdesk.Infrastructure.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShineCoder_Helpdesk.Infrastructure.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("ShineCoder_Helpdesk.Infrastructure.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShineCoder_Helpdesk.Infrastructure.Models.ApplicationUser", b =>
                {
                    b.HasOne("ShineCoder_Helpdesk.Infrastructure.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ShineCoder_Helpdesk.Infrastructure.Models.SubCategory", b =>
                {
                    b.HasOne("ShineCoder_Helpdesk.Infrastructure.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ShineCoder_Helpdesk.Infrastructure.Models.Ticket_Attachments", b =>
                {
                    b.HasOne("ShineCoder_Helpdesk.Infrastructure.Models.Tickets", "Ticket")
                        .WithMany("Ticket_Attachments")
                        .HasForeignKey("TicketId");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("ShineCoder_Helpdesk.Infrastructure.Models.Ticket_Solutions", b =>
                {
                    b.HasOne("ShineCoder_Helpdesk.Infrastructure.Models.Tickets", "tickets")
                        .WithMany()
                        .HasForeignKey("ticketsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tickets");
                });

            modelBuilder.Entity("ShineCoder_Helpdesk.Infrastructure.Models.Tickets", b =>
                {
                    b.HasOne("ShineCoder_Helpdesk.Infrastructure.Models.Ticket_Level", "Ticket_Level")
                        .WithMany()
                        .HasForeignKey("TicketLevelId");

                    b.HasOne("ShineCoder_Helpdesk.Infrastructure.Models.Ticket_Priorities", "Ticket_Priorities")
                        .WithMany()
                        .HasForeignKey("TicketPriorityId");

                    b.HasOne("ShineCoder_Helpdesk.Infrastructure.Models.Ticket_Status", "Ticket_Status")
                        .WithMany()
                        .HasForeignKey("TicketStatusId");

                    b.HasOne("ShineCoder_Helpdesk.Infrastructure.Models.Ticket_Mode", "Ticket_Mode")
                        .WithMany()
                        .HasForeignKey("Ticket_ModeId");

                    b.HasOne("ShineCoder_Helpdesk.Infrastructure.Models.ApplicationUser", "AssignedUser")
                        .WithMany()
                        .HasForeignKey("Tkt_AssignedUserId");

                    b.HasOne("ShineCoder_Helpdesk.Infrastructure.Models.Category", "Ticket_Category")
                        .WithMany()
                        .HasForeignKey("Tkt_CategoryId");

                    b.HasOne("ShineCoder_Helpdesk.Infrastructure.Models.Department", "Ticket_Department")
                        .WithMany()
                        .HasForeignKey("Tkt_DepartmentId");

                    b.HasOne("ShineCoder_Helpdesk.Infrastructure.Models.Ticket_Impact", "Ticket_Impact")
                        .WithMany()
                        .HasForeignKey("Tkt_ImpactId");

                    b.HasOne("ShineCoder_Helpdesk.Infrastructure.Models.Location", "Ticket_Location")
                        .WithMany()
                        .HasForeignKey("Tkt_LocationId");

                    b.HasOne("ShineCoder_Helpdesk.Infrastructure.Models.RequestType", "Tickett_RequestType")
                        .WithMany()
                        .HasForeignKey("Tkt_RequestTypeId");

                    b.HasOne("ShineCoder_Helpdesk.Infrastructure.Models.ApplicationUser", "RequestUser")
                        .WithMany()
                        .HasForeignKey("Tkt_RequestUserId");

                    b.HasOne("ShineCoder_Helpdesk.Infrastructure.Models.SubCategory", "Ticket_SubCategory")
                        .WithMany()
                        .HasForeignKey("Tkt_SubCategoryId");

                    b.HasOne("ShineCoder_Helpdesk.Infrastructure.Models.Tkt_UpdateReason", "Tkt_UpdateReason")
                        .WithMany()
                        .HasForeignKey("Tkt_UpdateReasonId");

                    b.Navigation("AssignedUser");

                    b.Navigation("RequestUser");

                    b.Navigation("Ticket_Category");

                    b.Navigation("Ticket_Department");

                    b.Navigation("Ticket_Impact");

                    b.Navigation("Ticket_Level");

                    b.Navigation("Ticket_Location");

                    b.Navigation("Ticket_Mode");

                    b.Navigation("Ticket_Priorities");

                    b.Navigation("Ticket_Status");

                    b.Navigation("Ticket_SubCategory");

                    b.Navigation("Tickett_RequestType");

                    b.Navigation("Tkt_UpdateReason");
                });

            modelBuilder.Entity("ShineCoder_Helpdesk.Infrastructure.Models.Tickets", b =>
                {
                    b.Navigation("Ticket_Attachments");
                });
#pragma warning restore 612, 618
        }
    }
}
